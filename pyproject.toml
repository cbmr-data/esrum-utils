[tool.pyright]
typeCheckingMode = "strict"

[tool.ruff]
target-version = "py39"

[tool.ruff.lint]
select = ["ALL"]

ignore = [
    # Rules either deemed too burdonsome to implement or not useful
    "C90", # mccabe -- Complexity measures not deemed useful
    "COM", # flake8-commas -- Formatting handled by ruff/black
    "D",   # pydocstyle
    "EM",  # flake8-errmsg
    "TRY", # tryceratops
    # Individual rules deemed too burdonsome or not useful
    "S603", # subprocess-without-shell-equals-true
    # Disabled due to too many false positives
    "PLR2004", # magic-value-comparison -- Magic value used in comparison
    # Disabled due to personal style preferences
    "PLW2901", # redefined-loop-name -- `for` loop variable `value` overwritten
    "RET505",  # superfluous-else-return -- Unnecessary `elif` after `return` statement
    "RET506",  # superfluous-else-raise -- Unnecessary `elif` after `raise` statement
    "RET507",  # superfluous-else-continue --Unnecessary `elif` after `continue`
    "RET508",  # superfluous-else-break -- Unnecessary `elif` after `break` statement
    # Disabled due to hits in non-performance critical code where manual is clearer
    "PERF401", # manual-list-comprehension -- Use a list comprehension
    # Disabled due to conflict with `format` command
    "ISC001", # single-line-implicit-string-concatenation
    # Complexity warnings disabled for now
    "PLR09", # too-many-*
    "T20",   # flake8-print
    # Disabled to ensure identical behavior between execution/run-time
    "TC002", # typing-only-third-party-import -- Move third-party import `...` into a type-checking block
]
